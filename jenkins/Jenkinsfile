pipeline {
    agent none
    stages {
        stage('Build') {
             agent {
                docker {
                    image 'python:3'
                }
            }
            steps {          
                withEnv(["HOME=${env.WORKSPACE}"]){                  
                    sh 'python -m py_compile StockFlow/manage.py'
                }
            }
        }
        stage('Unit Test') {
            agent {
                docker {
                    image 'django'
                    image 'python:3.7'
                }
            } 
            
             steps{
                
                withEnv(["HOME=${env.WORKSPACE}"]){  
                     sh 'pip install -r requirements.txt'
                     
                     dir('StockFlow'){ 
                        sh 'python -m coverage run --source="." manage.py AgentSignUp.tests.test_AgentSignUp'
                        sh 'python -m coverage run --source="." manage.py AgentSignUp.tests.test_stock'
                        sh 'python -m coverage report'
                    }
                }
             }
        }
        stage('Integration Test') {
            agent {
                docker {
                    image 'django'
                    image 'python:3.7'
                }
            } 
            
             steps{
                
                withEnv(["HOME=${env.WORKSPACE}"]){  
                     sh 'pip install -r requirements.txt'
                     
                     dir('StockFlow'){ 
                        sh 'python -m coverage run --source="." manage.py test AgentSignUp.tests.test_integration'
                        sh 'python -m coverage report'
                    }
                }
             }
        }
        stage('Deploy to Heroku') {
           agent {
               docker {
                   image 'cimg/base:stable'
                   args '-u root'
               }
           }
           steps {
                sh '''
                    curl https://cli-assets.heroku.com/install.sh | sh;
                    heroku container:login
                    heroku container:push web --app stockflow-17
                    heroku container:release web --app stockflow-17
                '''
           }
       }

    }
}
